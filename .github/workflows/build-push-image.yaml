# ---
# name: build and push docker image
# on:
#   push

# jobs:
#   release-docker:
#     name: Release docker image
#     if: "!contains(github.event.head_commit.message, '[skip ci]')"
#     runs-on: ubuntu-18.04
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2

#       - name: Deploy docker image
#         uses: docker/build-push-action@v1
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}
#           repository: saiyam911/kube-certs
#           tag_with_ref: true
#           add_git_labels: true
#           tag_with_sha: true

#       - name: Get git sha short
#         id: vars
#         run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

#       - name: Generate deploy manifest from Jinja template
#         uses: cuchi/jinja2-action@v1.1.0
#         with:
#           template: tmpl/deploy.j2
#           output_file: deploy/deploy.yaml
#           strict: true
#           variables: |
#             image_deploy_tag=sha-${{ steps.vars.outputs.sha_short }}

#       - name: Commit deploy manifest on local repo
#         run: |
#           git config --local user.email "action@github.com"
#           git config --local user.name "GitHub Action"
#           git add .
#           git commit -s -m "[skip ci] Generate deployment manifests"

#       - name: Push deploy manifests to local repo
#         uses: ad-m/github-push-action@master
#         with:
#           github_token: ${{ secrets.AUTO_COMMIT_TOKEN }}

name: Dev environment CI and CD

on:
  push:
    branches: ["main"]

jobs:
  # ==============
  # CI task
  # ==============
  build-and-push-docker-image:
    name: Build Docker image and push to repositories
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Setup SHA
        run: echo "GITHUB_SHA=${GITHUB_SHA}" >> $GITHUB_ENV
      - name: Login ghcr.io
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.WORKFLOW_TOKEN }}
          logout: true
      - name: Pull the latest Docker image
        run: docker pull ghcr.io/champalab/demo-api:latest || true
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag ghcr.io/champalab/demo-api:${{ env.GITHUB_SHA }} --tag ghcr.io/champalab/demo-api:latest
      - name: Push the Docker image
        run: docker push ghcr.io/champalab/demo-api:${{ env.GITHUB_SHA }}
      - name: Push the Docker image latest
        run: docker push ghcr.io/champalab/demo-api:latest

  # ==============
  # CD DEV task
  # ==============
  gitops-dev-versioning:
    runs-on: ubuntu-latest
    needs: [build-and-push-docker-image]
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}

      - name: config git
        run: |
          git --version
          git config user.name "robot"
          git config user.email "root@laogw.link"
      - name: change image tag to deploy dev
        run: |
          sed "s|image: ghcr\.io/champalab/demo-api:[^ ]*|image: ghcr.io/champalab/demo-api:${GITHUB_SHA}|" infra/gitops/dev/deployment.yaml > tmp_deployment.yaml
          mv tmp_deployment.yaml infra/gitops/dev/deployment.yaml
          git add infra/gitops/dev/deployment.yaml
          git commit -m "[skip actions] ðŸ¤– change dev docker image version to ${GITHUB_SHA}"
          git pull origin develop --rebase
          git push
